import { ImageResponse } from '@vercel/og';
import { NextRequest } from 'next/server';
import { getRandomPositiveEmoji, getRandomNegativeEmoji } from "@/lib/emoji";

export const config = {
  runtime: 'edge',
};

export default async function handler(request: NextRequest) {
  const { searchParams } = request.nextUrl;
  const src = searchParams.get('src');
  const title = searchParams.get('title');
  const isYes = searchParams.get('isYes') == '1';
  const pct = searchParams.get('pct');
  const emoji = parseFloat(pct ?? '1.0') > 0 ? getRandomPositiveEmoji() : getRandomNegativeEmoji();
  const strPct = !!pct && pct.length > 0 ? pct + " %" : ""

  if (!src) {
    return new ImageResponse(<>invalid img</>, {
      width: 1200,
      height: 630,
    });
  }

  return new ImageResponse(
    (
      <div
        style={{
          width: '100%',
          height: '100%',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center',
          fontFamily: 'sans-serif',
          
        }}
      >
        <div style={{ 
          display: 'flex', 
          flexDirection: 'column', 
          padding: '24px',
          background: 'radial-gradient(circle at bottom left, rgb(192, 90, 236) 10%, rgb(40, 26, 245) 100%)'
        }}>
          {/* logo */}
          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '36px' }}>
            <svg 
              height="48px"
              width="176px"
              viewBox="0 0 176 48"
              fill="none"
            >
              <path 
                fill-rule="evenodd" 
                clip-rule="evenodd" 
                d="M78.6391 27.3227V9.54077H75.7148V27.3227H78.6391ZM49.9319 21.095V27.3233H46.8903V10.4676H53.455C54.7469 10.4676 55.8645 10.6972 56.8079 11.1564C57.7513 11.6156 58.4697 12.2523 58.9629 13.0666C59.4561 13.8808 59.7027 14.8089 59.7027 15.8508C59.7027 16.939 59.4581 17.8767 58.9688 18.6639C58.4794 19.4511 57.767 20.0531 56.8314 20.4699C55.8958 20.8867 54.7704 21.095 53.455 21.095H49.9319ZM49.9318 18.6871H53.455C54.5432 18.6871 55.3477 18.4362 55.8683 17.9346C56.389 17.4329 56.6493 16.746 56.6493 15.8739C56.6493 15.3337 56.5358 14.8378 56.3087 14.3863C56.0817 13.9348 55.7294 13.5721 55.2518 13.2981C54.7742 13.0241 54.1753 12.8871 53.455 12.8871H49.9318V18.6871ZM67.2507 27.5554C68.4643 27.5554 69.5173 27.2815 70.4098 26.7335C71.3024 26.1855 71.9855 25.4292 72.4591 24.4644C72.9328 23.4997 73.1696 22.4076 73.1696 21.1882V20.9451C73.1696 19.7257 72.9328 18.6336 72.4591 17.6689C71.9855 16.7042 71.3004 15.9459 70.404 15.394C69.5075 14.8422 68.4486 14.5663 67.2273 14.5663C66.0216 14.5663 64.9724 14.8422 64.0799 15.394C63.1874 15.9459 62.5043 16.7042 62.0306 17.6689C61.557 18.6336 61.3201 19.7257 61.3201 20.9451V21.1882C61.3201 22.4076 61.557 23.4997 62.0306 24.4644C62.5043 25.4292 63.1893 26.1855 64.0858 26.7335C64.9822 27.2815 66.0372 27.5554 67.2507 27.5554ZM64.9959 24.1058C65.497 24.8622 66.2486 25.2404 67.2508 25.2404C67.9162 25.2404 68.4741 25.0609 68.9242 24.702C69.3744 24.3432 69.7072 23.8589 69.9225 23.2492C70.1378 22.6394 70.2454 21.9526 70.2454 21.1885V20.9454C70.2454 20.189 70.1378 19.5041 69.9225 18.8905C69.7072 18.2769 69.3725 17.7888 68.9184 17.426C68.4643 17.0633 67.9006 16.8819 67.2273 16.8819C66.5618 16.8819 66.0059 17.0633 65.5596 17.426C65.1134 17.7888 64.7826 18.2769 64.5673 18.8905C64.352 19.5041 64.2443 20.189 64.2443 20.9454V21.1885C64.2443 22.377 64.4949 23.3495 64.9959 24.1058ZM85.4179 31.4486C84.8189 32.0699 83.9636 32.3806 82.8518 32.3806C82.4682 32.3806 82.0024 32.3111 81.4543 32.1722V29.961L81.9945 29.9842C82.6913 29.9842 83.2218 29.8626 83.5858 29.6195C83.9499 29.3764 84.2376 28.95 84.449 28.3403L84.8483 27.2752L80.3856 14.7955H83.5447L86.1871 23.2002L88.7472 14.7955H91.8593L86.7978 29.2201C86.4768 30.0845 86.0168 30.8273 85.4179 31.4486ZM96.3776 27.3239V18.2709C96.8473 17.3679 97.642 16.9164 98.7616 16.9164C99.4975 16.9164 100.055 17.0939 100.435 17.4489C100.815 17.8039 101.005 18.4021 101.005 19.2433V27.3239H103.929V18.9771L103.917 18.7108C104.089 18.1628 104.381 17.7268 104.792 17.4026C105.203 17.0785 105.714 16.9164 106.325 16.9164C107.068 16.9164 107.626 17.0843 107.998 17.42C108.37 17.7557 108.556 18.3519 108.556 19.2086V27.3239H111.48V19.2202C111.48 17.6071 111.124 16.4282 110.411 15.6835C109.699 14.9387 108.669 14.5663 107.323 14.5663C106.469 14.5663 105.714 14.7342 105.056 15.0699C104.399 15.4056 103.854 15.8745 103.424 16.4765C103.103 15.8282 102.645 15.3477 102.05 15.0352C101.455 14.7226 100.758 14.5663 99.9594 14.5663C99.1765 14.5663 98.4778 14.6994 97.8632 14.9657C97.2486 15.232 96.726 15.6159 96.2954 16.1176L96.2014 14.7978H93.4534V27.3239H96.3776ZM120.167 27.1734C119.611 27.4281 118.981 27.5554 118.276 27.5554C117.446 27.5554 116.703 27.3934 116.045 27.0692C115.387 26.7451 114.874 26.2974 114.507 25.7263C114.139 25.1552 113.955 24.5146 113.955 23.8046C113.955 22.4694 114.458 21.4468 115.464 20.7367C116.47 20.0267 117.897 19.6717 119.744 19.6717H121.506V18.8613C121.506 18.1976 121.322 17.6785 120.954 17.3042C120.586 16.9299 120.042 16.7427 119.321 16.7427C118.891 16.7427 118.511 16.8161 118.182 16.9627C117.853 17.1093 117.599 17.31 117.419 17.5647C117.239 17.8194 117.149 18.1049 117.149 18.4214H114.225C114.225 17.7499 114.442 17.119 114.876 16.5286C115.311 15.9382 115.929 15.4635 116.732 15.1046C117.534 14.7457 118.452 14.5663 119.486 14.5663C120.457 14.5663 121.314 14.7284 122.058 15.0525C122.802 15.3767 123.383 15.8629 123.802 16.5112C124.221 17.1595 124.43 17.9506 124.43 18.8844V24.4066C124.43 25.5488 124.591 26.4556 124.912 27.1271V27.3239H121.929C121.803 27.0538 121.694 26.664 121.6 26.1547C121.2 26.5791 120.723 26.9187 120.167 27.1734ZM118.84 25.251C118.222 25.251 117.74 25.0908 117.396 24.7706C117.051 24.4503 116.879 24.0354 116.879 23.526C116.879 22.87 117.141 22.3607 117.666 21.9979C118.19 21.6352 118.962 21.4538 119.979 21.4538H121.506V23.7923C121.287 24.1936 120.94 24.5371 120.467 24.8226C119.993 25.1082 119.451 25.251 118.84 25.251ZM130.287 18.7918V27.3239H127.363V14.7978H130.146L130.228 16.2102C130.549 15.6854 130.949 15.2802 131.426 14.9946C131.904 14.7091 132.456 14.5663 133.082 14.5663C133.247 14.5663 133.432 14.5817 133.64 14.6126C133.847 14.6435 134.002 14.6782 134.104 14.7168L134.08 17.4373C133.689 17.3756 133.301 17.3447 132.918 17.3447C131.61 17.3447 130.733 17.8271 130.287 18.7918ZM138.786 27.3227V23.2592L140.067 21.9742L143.766 27.3227H147.148L141.946 20.0062L146.655 14.7966H143.132L139.656 18.6748L138.786 19.7399V9.54077H135.874V27.3227H138.786ZM157.057 26.884C156.235 27.3316 155.24 27.5554 154.074 27.5554C152.837 27.5554 151.756 27.2911 150.832 26.7624C149.909 26.2338 149.2 25.5102 148.707 24.5918C148.214 23.6734 147.967 22.643 147.967 21.5008V21.0261C147.967 19.7373 148.217 18.6047 148.719 17.6284C149.22 16.6521 149.909 15.8976 150.785 15.3651C151.662 14.8326 152.649 14.5663 153.745 14.5663C154.943 14.5663 155.949 14.8249 156.763 15.342C157.577 15.859 158.186 16.5826 158.589 17.5126C158.992 18.4426 159.194 19.5212 159.194 20.7483V21.9639H150.915C150.969 22.6044 151.138 23.1717 151.42 23.6656C151.701 24.1596 152.083 24.5455 152.565 24.8233C153.046 25.1012 153.608 25.2401 154.25 25.2401C155.565 25.2401 156.622 24.7307 157.421 23.712L158.983 25.2054C158.521 25.8768 157.879 26.4364 157.057 26.884ZM156.305 19.8803H150.973C151.106 18.931 151.408 18.194 151.878 17.6692C152.347 17.1443 152.966 16.8819 153.733 16.8819C154.594 16.8819 155.229 17.1424 155.636 17.6634C156.043 18.1843 156.266 18.85 156.305 19.6604V19.8803ZM167.317 27.2774C166.754 27.4626 166.12 27.5552 165.415 27.5552C164.381 27.5552 163.567 27.2735 162.972 26.7101C162.377 26.1467 162.08 25.2476 162.08 24.0127V16.9277H160.013V14.7976H162.08V11.7414H165.004V14.7976H167.235V16.9277H165.004V23.8159C165.004 24.3407 165.113 24.6977 165.333 24.8868C165.552 25.0759 165.881 25.1704 166.319 25.1704C166.632 25.1704 166.965 25.1318 167.317 25.0546V27.2774Z" 
                fill="white">
              </path>
              <path 
                fill-rule="evenodd" 
                clip-rule="evenodd" d="M30.6525 17.4069V0L0 8.6333V8.77358V29.2266V29.3668L30.6525 38.0001V20.5933V17.4069ZM27.6857 16.5713V3.8835L5.16277 10.2277L27.6857 16.5713ZM25.4849 19.0001L2.96678 12.6572V25.3429L25.4849 19.0001ZM5.16283 27.7724L27.6857 34.1166V21.4289L5.16283 27.7724Z" 
                fill="white">
              </path>
            </svg>
          </div>
          {/* Card */}
          <div
            style={{
              display: 'flex',
              flexDirection: 'column',
              borderRadius: '15px',
              padding: '48px',
              margin: '36px 96px 156px 96px',
              backgroundColor: 'white'
            }}
          >
            {/* Top section */}
            <div style={{ display: 'flex', height: '70%' }}>
              {/* Image placeholder */}
              <div style={{ width: '30%', display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', gap: '8px', marginRight: '4px'}}>
                <img
                  src={src}
                  style={{
                    padding: '36px',
                    objectFit: 'contain',
                    objectPosition: 'center',
                    imageRendering: 'auto'
                  }}
                />
              </div>
              {/* logo/title */}
              <div style={{width: '70%', display: 'flex', justifyContent: 'flex-start', flexDirection: 'column', gap: "48px"}}>
                {/* title */}
                <div style={{ width: '100%', display: 'flex', paddingTop: '24px' }}>
                  <div style={{ fontSize: '32px', fontWeight: 'bold' }}>{title}</div>
                </div>
                {/* Yes/No section */}
                <div style={{ width: '30%', display: 'flex', flexDirection: 'column' }}>
                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>
                    {isYes ? (
                      <div style={{ backgroundColor: '#f0fff0', borderRadius: '5px', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '12px 18px' }}>
                        <span style={{ color: 'green', fontSize: '38px' }}>Yes</span>
                      </div>
                    ) : (
                      <div style={{ backgroundColor: '#fff0f0', borderRadius: '5px', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '12px 18px' }}>
                        <span style={{ color: 'red', fontSize: '38px' }}>No</span>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
            {/* Bottom section */}
            <div style={{ display: 'flex', height: '30%',  justifyContent: 'flex-end', gap: '12px' }}>
              {/* Percent section */}
              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                <span style={{ color: '#4ade80', fontSize: '84px', fontWeight: 'bold' }}>{strPct}</span>
              </div>
              {/* Emoji placeholder */}
              <div style={{ width: '25%', display: 'flex', alignItems: 'center', justifyContent: 'flex-end', fontSize: '36px' }}>
                {emoji}
              </div>
            </div>
          </div>
        </div>
      </div>
    ),
    {
      width: 1200,
      height: 630,
    },
  );
}
